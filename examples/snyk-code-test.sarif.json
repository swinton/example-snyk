{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "CodeInjection",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mihaip/streamspigot/commit/3aba8ac42ede5ba67f5d8f1040e1ac8a9b7cddbf?diff=split#diff-f78666ecd3875bf9d606bc803ef71d25caa33a5400bd3787885efc1b51cf166fL-1",
                    "lines": [
                      {
                        "line": "var xhr = new XMLHttpRequest();\n",
                        "lineNumber": 211,
                        "lineChange": "removed"
                      },
                      {
                        "line": "xhr.onreadystatechange = function() {\n",
                        "lineNumber": 212,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (xhr.readyState == 4) {\n",
                        "lineNumber": 213,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      if (xhr.status == 200) {\n",
                        "lineNumber": 214,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      jsonCallback(eval('(' + xhr.responseText + ')'));\n",
                        "lineNumber": 215,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var xhr = new goog.net.XhrIo();\n",
                        "lineNumber": 219,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 220,
                        "lineChange": "added"
                      },
                      {
                        "line": "goog.events.listen(xhr, goog.net.EventType.COMPLETE, function() {\n",
                        "lineNumber": 221,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (xhr.isSuccess()) {\n",
                        "lineNumber": 222,
                        "lineChange": "added"
                      },
                      {
                        "line": "    jsonCallback(xhr.getResponseJson());\n",
                        "lineNumber": 223,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hiddentao/fast-levenshtein/commit/8d67bde78c9e75b5e253b0e84d0cbf227ffb98f9?diff=split#diff-a58852f173bee316460a26934b8a3c4d79b1acb88af655346ae74adce78113f7L-1",
                    "lines": [
                      {
                        "line": "setTimeout(__calculate(), 0);\n",
                        "lineNumber": 170,
                        "lineChange": "removed"
                      },
                      {
                        "line": "_defer(__calculate);\n",
                        "lineNumber": 183,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/guzzle/guzzle/commit/3d499a1b7ce589c3ef39d78bb1730d83d8a89c79?diff=split#diff-dea67d130560147fa1eeb821ab305ce5c0d44c5a3a0b16f3f11b4cb48008dcbaL-1",
                    "lines": [
                      {
                        "line": "that.responses = eval('(' + request.body + ')');\n",
                        "lineNumber": 177,
                        "lineChange": "removed"
                      },
                      {
                        "line": "that.responses = JSON.parse(request.body);\n",
                        "lineNumber": 177,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 118,
                "cwe": [
                  "CWE-94"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/CodeInjection",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[eval](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e7619883c4322f8288d6d2b58549e4ff4f1d2ffeda18ccb5262aaad89d47bcf4",
            "1": "cf7733e4.4773f344.8b18f948.93be4c77.ef9f7d82.8020cfdf.ea4b1c47.9b5cefb9.58999a81.4773f344.6ff5c2c8.d3185418.1b3a98c2.5fce695c.cd61fc56.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 20,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 42,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 20,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 52,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1,
                            "endLine": 1,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 600,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 1,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
